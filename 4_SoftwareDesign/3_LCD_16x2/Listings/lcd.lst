C51 COMPILER V9.60.7.0   LCD                                                               08/11/2025 15:09:21 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.l
                    -st) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          #include <string.h>
   4          #include "lcd.h"
   5          #include "timer.h"
   6          
   7          /*
   8          unsigned char heart[8] = {
   9            0x00,
  10            0x0A,
  11            0x1F,
  12            0x1F,
  13            0x0E,
  14            0x04,
  15            0x00,
  16            0x00
  17          };
  18          */
  19          
  20          // Initialize LCD
  21          void lcd_init(void) 
  22          {
  23   1          lcd_cmd(LCD_8BIT_MODE); // 2 lines, 5x7 matrix, 8-bit mode
  24   1          delay_ms(5);
  25   1          lcd_cmd(LCD_DISPLAY_ON_CURSOR_OFF); // Display ON, Cursor OFF
  26   1          delay_ms(5);
  27   1          lcd_cmd(LCD_CLEAR); // Clear display
  28   1          delay_ms(5);
  29   1          lcd_cmd(LCD_CURSOR_FIRSTLINE);
  30   1          delay_ms(5);
  31   1          lcd_cmd(LCD_CURSOR_INCREMENT); // Entry mode set: Increment cursor, no display shift
  32   1          delay_ms(5);
  33   1      }
  34          
  35          
  36          // Send command to LCD
  37          void lcd_cmd(unsigned char cmd) 
  38          {
  39   1          LCD_DATA_PORT = cmd;
  40   1          RS = 0; // Command mode
  41   1          RW = 0; // Write mode
  42   1          EN = 1; // Enable pulse
  43   1          delay_ms(1);
  44   1          EN = 0;
  45   1          delay_ms(1);
  46   1      }
  47          
  48          
  49          // Clear the LCD
  50          void lcd_clear(unsigned char cmd)
  51          {
  52   1          LCD_DATA_PORT = cmd;
  53   1          RS = ON; // Command mode
  54   1          RW = ON; // Write mode
C51 COMPILER V9.60.7.0   LCD                                                               08/11/2025 15:09:21 PAGE 2   

  55   1          EN = OFF; // Enable pulse
  56   1          delay_ms(1);
  57   1          EN = ON;
  58   1          delay_ms(1);
  59   1      }
  60          
  61          // Send datas to LCD
  62          void lcd_data(unsigned char dat) 
  63          {
  64   1          LCD_DATA_PORT = dat;
  65   1          RS = OFF; // Data mode
  66   1          RW = ON; // Write mode
  67   1          EN = OFF; // Enable pulse
  68   1          delay_ms(1);
  69   1          EN = ON;
  70   1          delay_ms(1);
  71   1      }
  72          
  73          
  74          // Print string to LCD
  75          void lcd_print_string(char *str) 
  76          {
  77   1        lcd_clear(LCD_CLEAR); // Clear the lcd
  78   1        
  79   1          while (*str) 
  80   1          {
  81   2              lcd_data(*str++);
  82   2          }
  83   1      }
  84          
  85          
  86          // Set cursor to beginning of first line
  87          void lcd_set_cursor_firstline(void) 
  88          {
  89   1          lcd_clear(LCD_CLEAR);
  90   1          lcd_cmd(LCD_CURSOR_FIRSTLINE);
  91   1          delay_ms(1);
  92   1      }
  93          
  94          
  95          // Set cursor to beginning of second line
  96          void lcd_set_cursor_secondline(void) 
  97          {
  98   1          lcd_clear(LCD_CLEAR);
  99   1          lcd_cmd(LCD_CURSOR_SECONDLINE);
 100   1          delay_ms(1);
 101   1      }
 102          
 103          
 104          // Scrolling the string
 105          void scroll_string(const char *str, int delay_time_ms) 
 106          {
 107   1          int len = strlen(str),temp;
 108   1          char buffer[17];  // 16 chars + null terminator
 109   1          buffer[16] = '\0';
 110   1      
 111   1          if (len <= 16) 
 112   1          {
 113   2              // If string fits in LCD width, just print it once
 114   2              lcd_print_string((char *)str);
 115   2              return;
 116   2          }
C51 COMPILER V9.60.7.0   LCD                                                               08/11/2025 15:09:21 PAGE 3   

 117   1      
 118   1          // Scroll from start to end - 16 chars window
 119   1          for (temp = 0; temp <= len - 16; temp++) 
 120   1          {
 121   2              strncpy(buffer, &str[temp], 16);
 122   2              lcd_print_string(buffer);
 123   2              delay_ms(delay_time_ms);
 124   2          }
 125   1      }
 126          
 127          
 128          
 129          /*
 130          //  Store Custom Character in CGRAM: 
 131          void lcd_custom_char(unsigned char location, unsigned char *pattern) 
 132          {
 133              unsigned char i;
 134              lcd_cmd(0x40 + (location * 8)); // Address of CGRAM location
 135              for (i = 0; i < 8; i++) {
 136                  lcd_data(pattern[i]);
 137              }
 138          }
 139          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    338    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
